<!DOCTYPE html>
<!-- saved from url=(0066)http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2 -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    

    <title>Untitled</title>
    <link rel="shortcut icon" type="image/x-icon" href="http://localhost:8889/static/base/images/favicon.ico?v=30780f272ab4aac64aa073a841546240">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <link rel="stylesheet" href="./restaurant_files/jquery-ui.min.css" type="text/css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    


<script type="text/javascript" src="./restaurant_files/MathJax.js" charset="utf-8"></script>

<script type="text/javascript">
// MathJax disabled, set as null to distingish from *missing* MathJax,
// where it will be undefined, and should prompt a dialog later.
window.mathjax_url = "/static/components/MathJax/MathJax.js";
</script>

<link rel="stylesheet" href="./restaurant_files/bootstrap-tour.min.css" type="text/css">
<link rel="stylesheet" href="./restaurant_files/codemirror.css">


    <link rel="stylesheet" href="./restaurant_files/style.min.css" type="text/css">
    

<link rel="stylesheet" href="./restaurant_files/override.css" type="text/css">
<link rel="stylesheet" href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2" id="kernel-css" type="text/css">


    <link rel="stylesheet" href="./restaurant_files/custom.css" type="text/css">
    <script src="./restaurant_files/promise.min.js" type="text/javascript" charset="utf-8"></script>
    <script src="./restaurant_files/require.js" type="text/javascript" charset="utf-8"></script>
    <script>
      require.config({
          
          urlArgs: "v=20170219102046",
          
          baseUrl: '/static/',
          paths: {
            'auth/js/main': 'auth/js/main.min',
            custom : '/custom',
            nbextensions : '/nbextensions',
            widgets : '/deprecatedwidgets',
            kernelspecs : '/kernelspecs',
            underscore : 'components/underscore/underscore-min',
            backbone : 'components/backbone/backbone-min',
            jquery: 'components/jquery/jquery.min',
            bootstrap: 'components/bootstrap/js/bootstrap.min',
            bootstraptour: 'components/bootstrap-tour/build/js/bootstrap-tour.min',
            jqueryui: 'components/jquery-ui/ui/minified/jquery-ui.min',
            moment: 'components/moment/moment',
            codemirror: 'components/codemirror',
            termjs: 'components/term.js/src/term',
          },
          shim: {
            underscore: {
              exports: '_'
            },
            backbone: {
              deps: ["underscore", "jquery"],
              exports: "Backbone"
            },
            bootstrap: {
              deps: ["jquery"],
              exports: "bootstrap"
            },
            bootstraptour: {
              deps: ["bootstrap"],
              exports: "Tour"
            },
            jqueryui: {
              deps: ["jquery"],
              exports: "$"
            }
          }
      });

      require.config({
          map: {
              '*':{
                'contents': 'services/contents',
              }
          }
      });
    </script>

    
    

<script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="services/contents" src="./restaurant_files/contents.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="custom/custom" src="./restaurant_files/custom.js"></script><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Hover_Arrow {position: absolute; width: 15px; height: 11px; cursor: pointer}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">.MathJax_Preview .MJXc-math {color: inherit!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/notebook/js/extension" src="./restaurant_files/extension.js"></script><style type="text/css">.MJXc-script {font-size: .8em}
.MJXc-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXc-bold {font-weight: bold}
.MJXc-italic {font-style: italic}
.MJXc-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXc-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXc-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXc-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXc-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXc-largeop {font-size: 150%}
.MJXc-largeop.MJXc-int {vertical-align: -.2em}
.MJXc-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXc-display {display: block; text-align: center; margin: 1em 0}
.MJXc-math span {display: inline-block}
.MJXc-box {display: block!important; text-align: center}
.MJXc-box:after {content: " "}
.MJXc-rule {display: block!important; margin-top: .1em}
.MJXc-char {display: block!important}
.MJXc-mo {margin: 0 .15em}
.MJXc-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXc-denom {display: inline-table!important; width: 100%}
.MJXc-denom > * {display: table-row!important}
.MJXc-surd {vertical-align: top}
.MJXc-surd > * {display: block!important}
.MJXc-script-box > *  {display: table!important; height: 50%}
.MJXc-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXc-script-box > *:last-child > * {vertical-align: bottom}
.MJXc-script-box > * > * > * {display: block!important}
.MJXc-mphantom {visibility: hidden}
.MJXc-munderover {display: inline-table!important}
.MJXc-over {display: inline-block!important; text-align: center}
.MJXc-over > * {display: block!important}
.MJXc-munderover > * {display: table-row!important}
.MJXc-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXc-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXc-mtr {display: table-row!important}
.MJXc-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXc-mtr > .MJXc-mtd:first-child {padding-left: 0}
.MJXc-mtr:first-child > .MJXc-mtd {padding-top: 0}
.MJXc-mlabeledtr {display: table-row!important}
.MJXc-mlabeledtr > .MJXc-mtd:first-child {padding-left: 0}
.MJXc-mlabeledtr:first-child > .MJXc-mtd {padding-top: 0}
.MJXc-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXc-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXc-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXc-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXc-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXc-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXc-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXc-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXc-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXc-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXc-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_CHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><style type="text/css">.MathJax_Display {text-align: center; margin: 0; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}
.MathJax .merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MathJax .MJX-monospace {font-family: monospace}
.MathJax .MJX-sans-serif {font-family: sans-serif}
#MathJax_Tooltip {background-color: InfoBackground; color: InfoText; border: 1px solid black; box-shadow: 2px 2px 5px #AAAAAA; -webkit-box-shadow: 2px 2px 5px #AAAAAA; -moz-box-shadow: 2px 2px 5px #AAAAAA; -khtml-box-shadow: 2px 2px 5px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true'); padding: 3px 4px; z-index: 401; position: absolute; left: 0; top: 0; width: auto; height: auto; display: none}
.MathJax {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}
.MathJax img, .MathJax nobr, .MathJax a {border: 0; padding: 0; margin: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; vertical-align: 0; line-height: normal; text-decoration: none}
img.MathJax_strut {border: 0!important; padding: 0!important; margin: 0!important; vertical-align: 0!important}
.MathJax span {display: inline; position: static; border: 0; padding: 0; margin: 0; vertical-align: 0; line-height: normal; text-decoration: none}
.MathJax nobr {white-space: nowrap!important}
.MathJax img {display: inline!important; float: none!important}
.MathJax * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}
.MathJax_Processing {visibility: hidden; position: fixed; width: 0; height: 0; overflow: hidden}
.MathJax_Processed {display: none!important}
.MathJax_ExBox {display: block!important; overflow: hidden; width: 1px; height: 60ex; min-height: 0; max-height: none}
.MathJax .MathJax_EmBox {display: block!important; overflow: hidden; width: 1px; height: 60em; min-height: 0; max-height: none}
.MathJax .MathJax_HitBox {cursor: text; background: white; opacity: 0; filter: alpha(opacity=0)}
.MathJax .MathJax_HitBox * {filter: none; opacity: 1; background: transparent}
#MathJax_Tooltip * {filter: none; opacity: 1; background: transparent}
@font-face {font-family: MathJax_Blank; src: url('about:blank')}
.MathJax .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/init" src="./restaurant_files/init.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/notebook/js/widgetarea" src="./restaurant_files/widgetarea.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/manager" src="./restaurant_files/manager.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/widget" src="./restaurant_files/widget.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/widget_link" src="./restaurant_files/widget_link.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/widget_bool" src="./restaurant_files/widget_bool.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/widget_button" src="./restaurant_files/widget_button.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/widget_box" src="./restaurant_files/widget_box.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/widget_float" src="./restaurant_files/widget_float.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/widget_image" src="./restaurant_files/widget_image.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/widget_int" src="./restaurant_files/widget_int.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/widget_color" src="./restaurant_files/widget_color.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/widget_output" src="./restaurant_files/widget_output.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/widget_selection" src="./restaurant_files/widget_selection.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/widget_selectioncontainer" src="./restaurant_files/widget_selectioncontainer.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/widget_string" src="./restaurant_files/widget_string.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/widgets/widgets/js/widget_controller" src="./restaurant_files/widget_controller.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="backbone" src="./restaurant_files/backbone-min.js"></script><link rel="stylesheet" type="text/css" href="./restaurant_files/widgets.min.css"></head>

<body class="notebook_app command_mode" data-project="" data-base-url="/" data-ws-url="" data-notebook-name="Untitled.ipynb" data-notebook-path="Untitled.ipynb"><div style="visibility: hidden; overflow: hidden; position: absolute; top: 0px; height: 1px; width: auto; padding: 0px; border: 0px; margin: 0px; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal;"><div id="MathJax_Hidden"></div></div><div id="MathJax_Message" style="display: none;"></div>

<noscript>
    &lt;div id='noscript'&gt;
      IPython Notebook requires JavaScript.&lt;br&gt;
      Please enable it to proceed.
  &lt;/div&gt;
</noscript>

<div id="header" style="display: block;">
  <div id="header-container" class="container">
  <div id="ipython_notebook" class="nav navbar-brand pull-left"><a href="http://localhost:8889/tree" title="dashboard"><img src="./restaurant_files/logo.png" alt="Jupyter Notebook"></a></div>

  
  
  

    <span id="login_widget">
      
    </span>

  

  

  


<span id="save_widget" class="pull-left save_widget">
    <span id="notebook_name" class="filename">Untitled</span>
    <span class="checkpoint_status" title="Sun, Feb 19, 2017 7:38 PM">Last Checkpoint: 4 minutes ago</span>
    <span class="autosave_status">(autosaved)</span>
</span>

<span id="kernel_logo_widget">
  <img class="current_kernel_logo" src="./restaurant_files/logo-64x64.png" style="display: inline;">
</span>


  </div>
  <div class="header-bar"></div>

  
<div id="menubar-container" class="container">
<div id="menubar">
    <div id="menus" class="navbar navbar-default" role="navigation">
        <div class="container-fluid">
            <button type="button" class="btn btn-default navbar-btn navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
              <i class="fa fa-bars"></i>
              <span class="navbar-text">Menu</span>
            </button>
            <p id="kernel_indicator" class="navbar-text indicator_area">
              <span class="kernel_indicator_name">Python 2</span>
              <i id="kernel_indicator_icon" class="kernel_idle_icon" title="Kernel Idle"></i>
            </p>
            <i id="readonly-indicator" class="navbar-text" title="This notebook is read-only" style="display: none;">
                <span class="fa-stack">
                    <i class="fa fa-save fa-stack-1x"></i>
                    <i class="fa fa-ban fa-stack-2x text-danger"></i>
                </span>
            </i>
            <i id="modal_indicator" class="navbar-text modal_indicator" title="Command Mode"></i>
            <span id="notification_area"><div id="notification_kernel" class="notification_widget btn btn-xs navbar-btn undefined info" style="display: none;"><span></span></div><div id="notification_notebook" class="notification_widget btn btn-xs navbar-btn" style="display: none;"><span></span></div></span>
            <div class="navbar-collapse collapse">
              <ul class="nav navbar-nav">
                <li class="dropdown"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#" class="dropdown-toggle" data-toggle="dropdown">File</a>
                    <ul id="file_menu" class="dropdown-menu">
                        <li id="new_notebook" class="dropdown-submenu">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">New Notebook</a>
                            <ul class="dropdown-menu" id="menu-new-notebook-submenu"><li id="new-notebook-submenu-python2"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Python 2</a></li></ul>
                        </li>
                        <li id="open_notebook" title="Opens a new window with the Dashboard view">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Open...</a></li>
                        <!-- <hr/> -->
                        <li class="divider"></li>
                        <li id="copy_notebook" title="Open a copy of this notebook&#39;s contents and start a new kernel">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Make a Copy...</a></li>
                        <li id="rename_notebook"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Rename...</a></li>
                        <li id="save_checkpoint"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Save and Checkpoint</a></li>
                        <!-- <hr/> -->
                        <li class="divider"></li>
                        <li id="restore_checkpoint" class="dropdown-submenu"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Revert to Checkpoint</a>
                          <ul class="dropdown-menu"><li><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Sunday, February 19, 2017 7:38 PM</a></li></ul>
                        </li>
                        <li class="divider"></li>
                        <li id="print_preview"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Print Preview</a></li>
                        <li class="dropdown-submenu"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Download as</a>
                            <ul class="dropdown-menu">
                                <li id="download_ipynb"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">IPython Notebook (.ipynb)</a></li>
                                <li id="download_script"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Python (.py)</a></li>
                                <li id="download_html"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">HTML (.html)</a></li>
                                <li id="download_markdown"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Markdown (.md)</a></li>
                                <li id="download_rst"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">reST (.rst)</a></li>
                                <li id="download_pdf"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">PDF via LaTeX (.pdf)</a></li>
                            </ul>
                        </li>
                        <li class="divider"></li>
                        <li id="trust_notebook" title="Trust the output of this notebook" class="disabled">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Trusted Notebook</a></li>
                        <li class="divider"></li>
                        <li id="kill_and_exit" title="Shutdown this notebook&#39;s kernel, and close this window">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Close and Halt</a></li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#" class="dropdown-toggle" data-toggle="dropdown">Edit</a>
                    <ul id="edit_menu" class="dropdown-menu">
                        <li id="cut_cell"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Cut Cell</a></li>
                        <li id="copy_cell"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Copy Cell</a></li>
                        <li id="paste_cell_above" class="disabled"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Paste Cell Above</a></li>
                        <li id="paste_cell_below" class="disabled"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Paste Cell Below</a></li>
                        <li id="paste_cell_replace" class="disabled"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Paste Cell &amp; Replace</a></li>
                        <li id="delete_cell"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Delete Cell</a></li>
                        <li id="undelete_cell" class="disabled"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Undo Delete Cell</a></li>
                        <li class="divider"></li>
                        <li id="split_cell"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Split Cell</a></li>
                        <li id="merge_cell_above"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Merge Cell Above</a></li>
                        <li id="merge_cell_below"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Merge Cell Below</a></li>
                        <li class="divider"></li>
                        <li id="move_cell_up"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Move Cell Up</a></li>
                        <li id="move_cell_down"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Move Cell Down</a></li>
                        <li class="divider"></li>
                        <li id="edit_nb_metadata"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Edit Notebook Metadata</a></li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#" class="dropdown-toggle" data-toggle="dropdown">View</a>
                    <ul id="view_menu" class="dropdown-menu">
                        <li id="toggle_header" title="Show/Hide the IPython Notebook logo and notebook title (above menu bar)">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Toggle Header</a></li>
                        <li id="toggle_toolbar" title="Show/Hide the action icons (below menu bar)">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Toggle Toolbar</a></li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#" class="dropdown-toggle" data-toggle="dropdown">Insert</a>
                    <ul id="insert_menu" class="dropdown-menu">
                        <li id="insert_cell_above" title="Insert an empty Code cell above the currently active cell">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Insert Cell Above</a></li>
                        <li id="insert_cell_below" title="Insert an empty Code cell below the currently active cell">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Insert Cell Below</a></li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#" class="dropdown-toggle" data-toggle="dropdown">Cell</a>
                    <ul id="cell_menu" class="dropdown-menu">
                        <li id="run_cell" title="Run this cell, and move cursor to the next one">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Run</a></li>
                        <li id="run_cell_select_below" title="Run this cell, select below">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Run and Select Below</a></li>
                        <li id="run_cell_insert_below" title="Run this cell, insert below">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Run and Insert Below</a></li>
                        <li id="run_all_cells" title="Run all cells in the notebook">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Run All</a></li>
                        <li id="run_all_cells_above" title="Run all cells above (but not including) this cell">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Run All Above</a></li>
                        <li id="run_all_cells_below" title="Run this cell and all cells below it">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Run All Below</a></li>
                        <li class="divider"></li>
                        <li id="change_cell_type" class="dropdown-submenu" title="All cells in the notebook have a cell type. By default, new cells are created as &#39;Code&#39; cells">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Cell Type</a>
                            <ul class="dropdown-menu">
                              <li id="to_code" title="Contents will be sent to the kernel for execution, and output will display in the footer of cell">
                                  <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Code</a></li>
                              <li id="to_markdown" title="Contents will be rendered as HTML and serve as explanatory text">
                                  <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Markdown</a></li>
                              <li id="to_raw" title="Contents will pass through nbconvert unmodified">
                                  <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Raw NBConvert</a></li>
                            </ul>
                        </li>
                        <li class="divider"></li>
                        <li id="current_outputs" class="dropdown-submenu"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Current Output</a>
                            <ul class="dropdown-menu">
                                <li id="toggle_current_output" title="Hide/Show the output of the current cell">
                                    <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Toggle</a>
                                </li>
                                <li id="toggle_current_output_scroll" title="Scroll the output of the current cell">
                                    <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Toggle Scrolling</a>
                                </li>
                                <li id="clear_current_output" title="Clear the output of the current cell">
                                    <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Clear</a>
                                </li>
                            </ul>
                        </li>
                        <li id="all_outputs" class="dropdown-submenu"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">All Output</a>
                            <ul class="dropdown-menu">
                                <li id="toggle_all_output" title="Hide/Show the output of all cells">
                                    <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Toggle</a>
                                </li>
                                <li id="toggle_all_output_scroll" title="Scroll the output of all cells">
                                    <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Toggle Scrolling</a>
                                </li>
                                <li id="clear_all_output" title="Clear the output of all cells">
                                    <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Clear</a>
                                </li>
                            </ul>
                        </li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#" class="dropdown-toggle" data-toggle="dropdown">Kernel</a>
                    <ul id="kernel_menu" class="dropdown-menu">
                        <li id="int_kernel" title="Send KeyboardInterrupt (CTRL-C) to the Kernel">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Interrupt</a>
                        </li>
                        <li id="restart_kernel" title="Restart the Kernel">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Restart</a>
                        </li>
                        <li id="reconnect_kernel" title="Reconnect to the Kernel">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Reconnect</a>
                        </li>
                        <li class="divider"></li>
                        <li id="menu-change-kernel" class="dropdown-submenu">
                            <a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Change kernel</a>
                            <ul class="dropdown-menu" id="menu-change-kernel-submenu"><li id="kernel-submenu-python2"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Python 2</a></li></ul>
                        </li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#" class="dropdown-toggle" data-toggle="dropdown">Help</a>
                    <ul id="help_menu" class="dropdown-menu">
                        <li id="notebook_tour" title="A quick tour of the notebook user interface"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">User Interface Tour</a></li>
                        <li id="keyboard_shortcuts" title="Opens a tooltip with all keyboard shortcuts"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">Keyboard Shortcuts</a></li>
                        <li class="divider"></li>
                        

                        
                            
                                <li><a href="http://nbviewer.ipython.org/github/ipython/ipython/blob/3.x/examples/Notebook/Index.ipynb" target="&quot;_blank&quot;" title="&quot;Opens" in="" a="" new="" window&#34;="">
                                
                                    <i class="fa fa-external-link menu-icon pull-right"></i>
                                

                                Notebook Help
                                </a></li>
                            
                                <li><a href="https://help.github.com/articles/markdown-basics/" target="&quot;_blank&quot;" title="&quot;Opens" in="" a="" new="" window&#34;="">
                                
                                    <i class="fa fa-external-link menu-icon pull-right"></i>
                                

                                Markdown
                                </a></li>
                            
                            
                        
                        <li id="kernel-help-links" class="divider"></li><li><a target="_blank" title="Opens in a new window" href="http://docs.python.org/2.7"><i class="fa fa-external-link menu-icon pull-right"></i><span>Python</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://ipython.org/documentation.html"><i class="fa fa-external-link menu-icon pull-right"></i><span>IPython</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://docs.scipy.org/doc/numpy/reference/"><i class="fa fa-external-link menu-icon pull-right"></i><span>NumPy</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://docs.scipy.org/doc/scipy/reference/"><i class="fa fa-external-link menu-icon pull-right"></i><span>SciPy</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://matplotlib.org/contents.html"><i class="fa fa-external-link menu-icon pull-right"></i><span>Matplotlib</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://docs.sympy.org/latest/index.html"><i class="fa fa-external-link menu-icon pull-right"></i><span>SymPy</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://pandas.pydata.org/pandas-docs/stable/"><i class="fa fa-external-link menu-icon pull-right"></i><span>pandas</span></a></li><li class="divider"></li>
                        <li title="About IPython Notebook"><a id="notebook_about" href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#">About</a></li>
                    </ul>
                </li>
              </ul>
            </div>
        </div>
    </div>
</div>

<div id="maintoolbar" class="navbar">
  <div class="toolbar-inner navbar-inner navbar-nobg">
    <div id="maintoolbar-container" class="container toolbar"><div class="btn-group" id="save-notbook"><button class="btn btn-default" title="Save and Checkpoint" data-jupyter-action="ipython.save-notebook"><i class="fa-save fa"></i></button></div><div class="btn-group" id="insert_above_below"><button class="btn btn-default" title="insert cell below" data-jupyter-action="ipython.insert-cell-after"><i class="fa-plus fa"></i></button></div><div class="btn-group" id="cut_copy_paste"><button class="btn btn-default" title="cut selected cell" data-jupyter-action="ipython.cut-selected-cell"><i class="fa-cut fa"></i></button><button class="btn btn-default" title="copy selected cell" data-jupyter-action="ipython.copy-selected-cell"><i class="fa-copy fa"></i></button><button class="btn btn-default" title="paste cell below" data-jupyter-action="ipython.paste-cell-after"><i class="fa-paste fa"></i></button></div><div class="btn-group" id="move_up_down"><button class="btn btn-default" title="move selected cell up" data-jupyter-action="ipython.move-selected-cell-up"><i class="fa-arrow-up fa"></i></button><button class="btn btn-default" title="move selected cell down" data-jupyter-action="ipython.move-selected-cell-down"><i class="fa-arrow-down fa"></i></button></div><div class="btn-group" id="run_int"><button class="btn btn-default" title="run cell, select below" data-jupyter-action="ipython.run-select-next"><i class="fa-step-forward fa"></i></button><button class="btn btn-default" title="interrupt kernel" data-jupyter-action="ipython.interrupt-kernel"><i class="fa-stop fa"></i></button><button class="btn btn-default" title="restart kernel" data-jupyter-action="ipython.restart-kernel"><i class="fa-repeat fa"></i></button></div><select id="cell_type" class="form-control select-xs"><option value="code">Code</option><option value="markdown">Markdown</option><option value="raw">Raw NBConvert</option><option value="heading">Heading</option></select><div class="btn-group"><span class="navbar-text">Cell Toolbar:</span><select id="ctb_select" class="form-control select-xs"><option value="">None</option><option value="Edit Metadata">Edit Metadata</option><option value="Raw Cell Format">Raw Cell Format</option><option value="Slideshow">Slideshow</option></select></div></div>
  </div>
</div>
</div>

<div class="lower-header-bar"></div>

</div>

<div id="site" style="height: 576px; display: block;">


<div id="ipython-main-app">
    <div id="notebook_panel">
        <div id="notebook" tabindex="-1"><div class="container" id="notebook-container"><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[1]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 481.797px; margin-bottom: 0px; border-right-width: 30px; min-height: 215px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">yelp</span>.<span class="cm-variable">client</span> <span class="cm-keyword">import</span> <span class="cm-variable">Client</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">yelp</span>.<span class="cm-variable">oauth1_authenticator</span> <span class="cm-keyword">import</span> <span class="cm-variable">Oauth1Authenticator</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">io</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">json</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">with</span> <span class="cm-variable">io</span>.<span class="cm-builtin">open</span>(<span class="cm-string">'config_yelp.json'</span>) <span class="cm-keyword">as</span> <span class="cm-variable">cred</span>:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">creds</span> = <span class="cm-variable">json</span>.<span class="cm-variable">load</span>(<span class="cm-variable">cred</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">auth</span> = <span class="cm-variable">Oauth1Authenticator</span>(<span class="cm-operator">**</span><span class="cm-variable">creds</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">client</span> = <span class="cm-variable">Client</span>(<span class="cm-variable">auth</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">biz</span> = <span class="cm-variable">client</span>.<span class="cm-variable">get_business</span>(<span class="cm-string">'yelp-san-francisco'</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 215px;"></div><div class="CodeMirror-gutters" style="display: none; height: 245px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style="display: none;"></div><div class="output" style="display: none;"></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[8]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 364.219px; margin-bottom: 0px; border-right-width: 30px; min-height: 45px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">biz</span> = <span class="cm-variable">client</span>.<span class="cm-variable">get_business</span>(<span class="cm-string">'yolk-chicago-8'</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">biz</span>.<span class="cm-variable">business</span>.<span class="cm-variable">categories</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 45px;"></div><div class="CodeMirror-gutters" style="display: none; height: 75px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt output_prompt">Out[8]:</div><div class="output_subarea output_text output_result"><pre>[Category(name=u'Breakfast &amp; Brunch', alias=u'breakfast_brunch'),
 Category(name=u'American (Traditional)', alias=u'tradamerican'),
 Category(name=u'Diners', alias=u'diners')]</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[9]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 187.797px; margin-bottom: 0px; border-right-width: 30px; min-height: 28px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">biz</span>.<span class="cm-variable">business</span>.<span class="cm-variable">eat24_url</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 28px;"></div><div class="CodeMirror-gutters" style="display: none; height: 58px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style="display: none;"></div><div class="output" style="display: none;"></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[17]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 263px; margin-bottom: 0px; border-right-width: 30px; min-height: 28px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">biz</span>.<span class="cm-variable">business</span>.<span class="cm-variable">reviews</span>[<span class="cm-number">0</span>].<span class="cm-variable">excerpt</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 28px;"></div><div class="CodeMirror-gutters" style="display: none; height: 58px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt output_prompt">Out[17]:</div><div class="output_subarea output_text output_result"><pre>u"We aren't breakfast people, but Yolk has us nearly converted. I had the protein &amp; eggs while the husband had Hey Ricky! It was amazing. \n\nPlus, our waiter..."</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell unselected rendered" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[18]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 128.984px; margin-bottom: 0px; border-right-width: 30px; min-height: 28px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">biz</span>.<span class="cm-variable">business</span>.<span class="cm-variable">ho</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 28px;"></div><div class="CodeMirror-gutters" style="display: none; height: 58px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt output_prompt">Out[18]:</div><div class="output_subarea output_text output_result"><pre>['__class__',
 '__delattr__',
 '__dict__',
 '__doc__',
 '__format__',
 '__getattribute__',
 '__hash__',
 '__init__',
 '__module__',
 '__new__',
 '__reduce__',
 '__reduce_ex__',
 '__repr__',
 '__setattr__',
 '__sizeof__',
 '__str__',
 '__subclasshook__',
 '__weakref__',
 '_fields',
 '_parse',
 '_parse_categories',
 '_parse_list_to_objects',
 '_parse_main_response_body',
 '_parse_one_to_object',
 'categories',
 'deals',
 'display_phone',
 'distance',
 'eat24_url',
 'gift_certificates',
 'id',
 'image_url',
 'is_claimed',
 'is_closed',
 'location',
 'menu_date_updated',
 'menu_provider',
 'mobile_url',
 'name',
 'phone',
 'rating',
 'rating_img_url',
 'rating_img_url_large',
 'rating_img_url_small',
 'reservation_url',
 'review_count',
 'reviews',
 'snippet_image_url',
 'snippet_text',
 'url']</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[&nbsp;]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 1450.59px; left: 198.594px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 834.734px; margin-bottom: 0px; border-right-width: 30px; min-height: 1473px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 193px; top: 1445px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""Functions to make API call to Yelp for restaurants in a city"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">model</span> <span class="cm-keyword">import</span> <span class="cm-variable">City</span>, <span class="cm-variable">Restaurant</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">model</span> <span class="cm-keyword">import</span> <span class="cm-variable">db</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">sqlalchemy</span>.<span class="cm-variable">orm</span>.<span class="cm-variable">exc</span> <span class="cm-keyword">import</span> <span class="cm-variable">NoResultFound</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">yelp</span>.<span class="cm-variable">client</span> <span class="cm-keyword">import</span> <span class="cm-variable">Client</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">yelp</span>.<span class="cm-variable">oauth1_authenticator</span> <span class="cm-keyword">import</span> <span class="cm-variable">Oauth1Authenticator</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">io</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">json</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">get_city_id</span>(<span class="cm-variable">city</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""Get the city id from database. Otherwise, add city to database and get the city id."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">try</span>:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">existing_city</span> = <span class="cm-variable">db</span>.<span class="cm-variable">session</span>.<span class="cm-variable">query</span>(<span class="cm-variable">City</span>).<span class="cm-builtin">filter</span>(<span class="cm-variable">City</span>.<span class="cm-variable">name</span> <span class="cm-operator">==</span> <span class="cm-variable">city</span>).<span class="cm-variable">one</span>()</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">except</span> <span class="cm-variable">NoResultFound</span>:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">new_city</span> = <span class="cm-variable">City</span>(<span class="cm-variable">name</span>=<span class="cm-variable">city</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">db</span>.<span class="cm-variable">session</span>.<span class="cm-variable">add</span>(<span class="cm-variable">new_city</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">db</span>.<span class="cm-variable">session</span>.<span class="cm-variable">commit</span>()</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-keyword">return</span> <span class="cm-variable">new_city</span>.<span class="cm-variable">city_id</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-variable">existing_city</span>.<span class="cm-variable">city_id</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Resource for how to offset Yelp API results from http://www.mfumagalli.com/wp/portfolio/nycbars/</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">get_restaurants</span>(<span class="cm-variable">city</span>, <span class="cm-variable">offset</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    Returns API response from Yelp API call to get restaurants for a city, with the results offset.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    Note that Yelp only returns 20 results each time, which is why we need to offset if we want</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    the next Nth results.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    """</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Read Yelp API keys</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">with</span> <span class="cm-variable">io</span>.<span class="cm-builtin">open</span>(<span class="cm-string">'config_secret.json'</span>) <span class="cm-keyword">as</span> <span class="cm-variable">cred</span>:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">creds</span> = <span class="cm-variable">json</span>.<span class="cm-variable">load</span>(<span class="cm-variable">cred</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">auth</span> = <span class="cm-variable">Oauth1Authenticator</span>(<span class="cm-operator">**</span><span class="cm-variable">creds</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">client</span> = <span class="cm-variable">Client</span>(<span class="cm-variable">auth</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Set term as restaurant to get restaurants for results</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Need to pass in offset, so Yelp knows how much to offset by</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">params</span> = {</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-string">'term'</span>: <span class="cm-string">'restaurant'</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-string">'offset'</span>: <span class="cm-variable">offset</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    }</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-variable">client</span>.<span class="cm-variable">search</span>(<span class="cm-variable">city</span>, <span class="cm-operator">**</span><span class="cm-variable">params</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">load_restaurants</span>(<span class="cm-variable">city</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""Get all restaurants for a city from Yelp and load restaurants into database."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Get city id, as city id is a required parameter when adding a restaurant to the database</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">city_id</span> = <span class="cm-variable">get_city_id</span>(<span class="cm-variable">city</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Start offset at 0 to return the first 20 results from Yelp API request</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">offset</span> = <span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Get total number of restaurants for this city</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">total_results</span> = <span class="cm-variable">get_restaurants</span>(<span class="cm-variable">city</span>, <span class="cm-variable">offset</span>).<span class="cm-variable">total</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Get all restaurants for a city and load each restaurant into the database</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Note: Yelp has a limitation of 1000 for accessible results, so get total results</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># if less than 1000 or get only 1000 results back even if there should be more</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">while</span> <span class="cm-number">1000</span> <span class="cm-operator">&gt;</span> <span class="cm-variable">offset</span> <span class="cm-operator">&lt;</span> <span class="cm-variable">total_results</span>:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-comment"># API response returns a SearchResponse object with accessible attributes</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-comment"># response.businesses returns a list of business objects with further attributes</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-keyword">for</span> <span class="cm-variable">business</span> <span class="cm-keyword">in</span> <span class="cm-variable">get_restaurants</span>(<span class="cm-variable">city</span>, <span class="cm-variable">offset</span>).<span class="cm-variable">businesses</span>:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">            <span class="cm-variable">restaurant</span> = <span class="cm-variable">Restaurant</span>(<span class="cm-variable">city_id</span>=<span class="cm-variable">city_id</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                                    <span class="cm-variable">name</span>=<span class="cm-variable">business</span>.<span class="cm-variable">name</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                                    <span class="cm-variable">address</span>=<span class="cm-string">" "</span>.<span class="cm-variable">join</span>(<span class="cm-variable">business</span>.<span class="cm-variable">location</span>.<span class="cm-variable">display_address</span>),</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                                    <span class="cm-variable">phone</span>=<span class="cm-variable">business</span>.<span class="cm-variable">display_phone</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                                    <span class="cm-variable">image_url</span>=<span class="cm-variable">business</span>.<span class="cm-variable">image_url</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                                    <span class="cm-variable">latitude</span>=<span class="cm-variable">business</span>.<span class="cm-variable">location</span>.<span class="cm-variable">coordinate</span>.<span class="cm-variable">latitude</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                                    <span class="cm-variable">longitude</span>=<span class="cm-variable">business</span>.<span class="cm-variable">location</span>.<span class="cm-variable">coordinate</span>.<span class="cm-variable">longitude</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">            <span class="cm-variable">db</span>.<span class="cm-variable">session</span>.<span class="cm-variable">add</span>(<span class="cm-variable">restaurant</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-comment"># Yelp returns only 20 results each time, so need to offset by 20 while iterating</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">offset</span> += <span class="cm-number">20</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">db</span>.<span class="cm-variable">session</span>.<span class="cm-variable">commit</span>()</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 1473px;"></div><div class="CodeMirror-gutters" style="display: none; height: 1503px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style="display: none;"></div><div class="output" style="display: none;"></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell rendered selected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[2]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 3745.59px; left: 156.594px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="false"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 910px; margin-bottom: 0px; border-right-width: 30px; min-height: 4686px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre>x</pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 151px; top: 3740px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""Models and database functions."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">flask_sqlalchemy</span> <span class="cm-keyword">import</span> <span class="cm-variable">SQLAlchemy</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">datetime</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># from sqlalchemy_searchable import make_searchable</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># from sqlalchemy_utils.types import TSVectorType</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># This is the connection to the PostgreSQL database; we're getting this through</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># the Flask-SQLAlchemy helper library. On this, we can find the `session`</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># object, where we do most of our interactions (like committing, etc.)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">db</span> = <span class="cm-variable">SQLAlchemy</span>()</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># make_searchable()</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">##############################################################################</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Model definitions</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># class User(db.Model):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     """User of website."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     __tablename__ = "users"</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     user_id = db.Column(db.Integer, autoincrement=True, primary_key=True)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     city_id = db.Column(db.Integer, db.ForeignKey('cities.city_id'), nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     email = db.Column(db.String(100), unique=True, nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     password = db.Column(db.String(100), nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     first_name = db.Column(db.String(100), nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     last_name = db.Column(db.String(100), nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     # Put name inside TSVectorType definition for it to be fulltext-indexed (searchable)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     search_vector = db.Column(TSVectorType('first_name', 'last_name'))</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     city = db.relationship("City", backref=db.backref("users"))</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     def __repr__(self):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#         """Provide helpful representation when printed."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#         return "&lt;User user_id=%s email=%s&gt;" % (self.user_id,</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                                                self.email)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">class</span> <span class="cm-def">Restaurant</span>(<span class="cm-variable">db</span>.<span class="cm-variable">Model</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""Restaurant on website."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">__tablename__</span> = <span class="cm-string">"restaurants"</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    [<span class="cm-string">u'is_claimed'</span>, <span class="cm-string">u'rating'</span>, <span class="cm-string">u'review_count'</span>, <span class="cm-string">u'name'</span>, <span class="cm-string">u'phone'</span>, <span class="cm-string">u'url'</span>, </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">     <span class="cm-string">u'price'</span>, <span class="cm-string">u'coordinates'</span>, <span class="cm-string">u'hours'</span>, <span class="cm-string">u'photos'</span>, <span class="cm-string">u'image_url'</span>, <span class="cm-string">u'categories'</span>, </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">     <span class="cm-string">u'display_phone'</span>, <span class="cm-string">u'id'</span>, <span class="cm-string">u'is_closed'</span>, <span class="cm-string">u'location'</span>]</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">restaurant_id</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">Integer</span>, <span class="cm-variable">autoincrement</span>=<span class="cm-builtin">True</span>, <span class="cm-variable">primary_key</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">yelp_id</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">150</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">yelp_rating</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">Numeric</span>, <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">yelp_review_count</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">Integer</span>, <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">name</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">150</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">False</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">phone</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">yelp_url</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">200</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">yelp_price_level</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">10</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">latitude</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">Numeric</span>, <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">longitude</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">Numeric</span>, <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hours_type</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">is_open_now</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">Boolean</span>(), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>) </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hour_start_monday</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hour_end_monday</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hour_start_tuesday</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hour_end_tuesday</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)    </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hour_start_wednesday</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hour_end_wednesday</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)    </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hour_start_thursday</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hour_end_thursday</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)    </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hour_start_friday</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hour_end_friday</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)    </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hour_start_saturday</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hour_end_saturday</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)    </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hour_start_sunday</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">hour_end_sunday</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">20</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)    </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">is_closed</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">Boolean</span>(), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>) </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">categories</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">200</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">display_phone</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">50</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">location</span> = <span class="cm-variable">db</span>.<span class="cm-variable">Column</span>(<span class="cm-variable">db</span>.<span class="cm-variable">String</span>(<span class="cm-number">400</span>), <span class="cm-variable">nullable</span>=<span class="cm-builtin">True</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Latitude and Longitude need to be Numeric, not Integer to have decimal places</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Put restaurant name and address inside definition of TSVectorType to be fulltext-indexed (searchable)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     city = db.relationship("City", backref=db.backref("restaurants"))</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     categories = db.relationship("Category", secondary="restaurantcategories", backref="restaurants")</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     users = db.relationship("User", secondary="visits", backref="restaurants")</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">def</span> <span class="cm-def">__repr__</span>(<span class="cm-variable-2">self</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-string">"""Provide helpful representation when printed."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-keyword">return</span> <span class="cm-string">"&lt;Restaurant restaurant_id=%s name=%s&gt;"</span> <span class="cm-operator">%</span> (<span class="cm-variable-2">self</span>.<span class="cm-variable">restaurant_id</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                                                          <span class="cm-variable-2">self</span>.<span class="cm-variable">name</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># class Visit(db.Model):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     """User's visited/saved restaurant on Breadcrumbs website.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     Association table between User and Restaurant.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     """</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     __tablename__ = "visits"</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     visit_id = db.Column(db.Integer, autoincrement=True, primary_key=True)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     user_id = db.Column(db.Integer, db.ForeignKey('users.user_id'), nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     restaurant_id = db.Column(db.Integer, db.ForeignKey('restaurants.restaurant_id'), nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     user = db.relationship("User", backref=db.backref("visits"))</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     restaurant = db.relationship("Restaurant", backref=db.backref("visits"))</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     def __repr__(self):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#         """Provide helpful representation when printed."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#         return "&lt;Visit visit_id=%s restaurant_id=%s&gt;" % (self.visit_id,</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                                                          self.restaurant_id)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># class City(db.Model):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     """City where the restaurant is in."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     __tablename__ = "cities"</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     city_id = db.Column(db.Integer, autoincrement=True, primary_key=True)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     name = db.Column(db.String(100), nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     # Set default for timestamp of current time at UTC time zone</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     updated_At = db.Column(db.DateTime, default=datetime.datetime.utcnow)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     def __repr__(self):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#         """Provide helpful representation when printed."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#         return "&lt;City city_id=%s name=%s&gt;" % (self.city_id,</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                                               self.name)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># class Category(db.Model):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     """Category of the restaurant."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     __tablename__ = "categories"</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     category_id = db.Column(db.Integer, autoincrement=True, primary_key=True)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     name = db.Column(db.String(100), unique=True, nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     def __repr__(self):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#         """Provide helpful representation when printed."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#         return "&lt;Category category_id=%s name=%s&gt;" % (self.category_id,</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                                                       self.name)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># class RestaurantCategory(db.Model):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     """Association table linking Restaurant and Category to manage the M2M relationship."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     __tablename__ = "restaurantcategories"</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     restcat_id = db.Column(db.Integer, autoincrement=True, primary_key=True)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     restaurant_id = db.Column(db.Integer, db.ForeignKey('restaurants.restaurant_id'), nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     category_id = db.Column(db.Integer, db.ForeignKey('categories.category_id'), nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     def __repr__(self):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#         """Provide helpful representation when printed."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#         return "&lt;RestaurantCategory restcat_id=%s restaurant_id=%s category_id=%s&gt;" % (self.restcat_id,</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                                                                                        self.restaurant_id,</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                                                                                        self.category_id)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># class Image(db.Model):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     """Image uploaded by user for each restaurant visit."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     __tablename__ = "images"</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     image_id = db.Column(db.Integer, autoincrement=True, primary_key=True)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     visit_id = db.Column(db.Integer, db.ForeignKey('visits.visit_id'), nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     url = db.Column(db.String(200), nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     uploaded_At = db.Column(db.DateTime, default=datetime.datetime.utcnow)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     taken_At = db.Column(db.DateTime, nullable=True)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     rating = db.Column(db.String(100), nullable=True)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     visit = db.relationship("Visit", backref=db.backref("images"))</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     def __repr__(self):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#         """Provide helpful representation when printed."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#         return "&lt;Image image_id=%s visit_id=%s&gt;" % (self.image_id,</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                                                     self.visit_id)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># class Connection(db.Model):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     """Connection between two users to establish a friendship and can see each other's info."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     __tablename__ = "connections"</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     connection_id = db.Column(db.Integer, autoincrement=True, primary_key=True)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     user_a_id = db.Column(db.Integer, db.ForeignKey('users.user_id'), nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     user_b_id = db.Column(db.Integer, db.ForeignKey('users.user_id'), nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     status = db.Column(db.String(100), nullable=False)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     # When both columns have a relationship with the same table, need to specify how</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     # to handle multiple join paths in the square brackets of foreign_keys per below</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     user_a = db.relationship("User", foreign_keys=[user_a_id], backref=db.backref("sent_connections"))</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     user_b = db.relationship("User", foreign_keys=[user_b_id], backref=db.backref("received_connections"))</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     def __repr__(self):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#         """Provide helpful representation when printed."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#         return "&lt;Connection connection_id=%s user_a_id=%s user_b_id=%s status=%s&gt;" % (self.connection_id,</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                                                                                       self.user_a_id,</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                                                                                       self.user_b_id,</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                                                                                       self.status)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">##############################################################################</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Helper functions</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># def connect_to_db(app, db_uri=None):</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     """Connect the database to our Flask app."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     # Configure to use our PostgreSQL database</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     app.config['SQLALCHEMY_DATABASE_URI'] = db_uri or 'postgresql:///zoeshrm'</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     app.config['SQLALCHEMY_ECHO'] = True</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     db.app = app</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     db.init_app(app)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">example_data</span>():</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""Create some sample data for testing."""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     van = City(name="Vancouver")</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">chambar</span> = <span class="cm-variable">Restaurant</span>(<span class="cm-variable">name</span>=<span class="cm-string">"Chambar"</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                         <span class="cm-variable">address</span>=<span class="cm-string">"568 Beatty St, Vancouver, BC V6B 2L3"</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                         <span class="cm-variable">phone</span>=<span class="cm-string">"(604) 879-7119"</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                         <span class="cm-variable">latitude</span>=<span class="cm-number">49.2810018</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                         <span class="cm-variable">longitude</span>=<span class="cm-operator">-</span><span class="cm-number">123.1109668</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">miku</span> = <span class="cm-variable">Restaurant</span>(<span class="cm-variable">name</span>=<span class="cm-string">"Miku"</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                      <span class="cm-variable">address</span>=<span class="cm-string">"200 Granville St #70, Vancouver, BC V6C 1S4"</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                      <span class="cm-variable">phone</span>=<span class="cm-string">"(604) 568-3900"</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                      <span class="cm-variable">latitude</span>=<span class="cm-number">49.2868017</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                      <span class="cm-variable">longitude</span>=<span class="cm-operator">-</span><span class="cm-number">123.1131884</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">fable</span> = <span class="cm-variable">Restaurant</span>(<span class="cm-variable">name</span>=<span class="cm-string">"Fable"</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                       <span class="cm-variable">address</span>=<span class="cm-string">"1944 W 4th Ave, Vancouver, BC V6J 1M7"</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                       <span class="cm-variable">phone</span>=<span class="cm-string">"(604) 732-1322"</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                       <span class="cm-variable">latitude</span>=<span class="cm-number">49.2679389</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                       <span class="cm-variable">longitude</span>=<span class="cm-operator">-</span><span class="cm-number">123.2190482</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     ashley = User(city_id=1,</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                   email="ashley@test.com",</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                   password="ashley",</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                   first_name="Ashley",</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                   last_name="Test")</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     bob = User(city_id=1,</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                email="bob@test.com",</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                password="bob",</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                first_name="Bob",</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                last_name="Test")</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     cat = User(city_id=1,</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                email="cat@test.com",</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                password="cat",</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                first_name="Cat",</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#                last_name="Test")</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">db</span>.<span class="cm-variable">session</span>.<span class="cm-variable">add_all</span>([<span class="cm-variable">chambar</span>, <span class="cm-variable">miku</span>, <span class="cm-variable">fable</span>])</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">db</span>.<span class="cm-variable">session</span>.<span class="cm-variable">commit</span>()</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">if</span> <span class="cm-variable">__name__</span> <span class="cm-operator">==</span> <span class="cm-string">"__main__"</span>:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># As a convenience, if we run this module interactively, it will leave</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># you in a state of being able to work with the database directly.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     from server import app</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">#     connect_to_db(app)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">print</span> <span class="cm-string">"Connected to DB."</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 4686px;"></div><div class="CodeMirror-gutters" style="display: none; height: 4716px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_error"><pre><span class="ansired">---------------------------------------------------------------------------</span>
<span class="ansired">ImportError</span>                               Traceback (most recent call last)
<span class="ansigreen">&lt;ipython-input-2-0504e114655f&gt;</span> in <span class="ansicyan">&lt;module&gt;<span class="ansiblue">()</span>
<span class="ansigreen">    271</span>     <span class="ansired"># you in a state of being able to work with the database directly.</span><span class="ansiblue"></span><span class="ansiblue"></span>
<span class="ansigreen">    272</span> <span class="ansiblue"></span>
<span class="ansigreen">--&gt; 273<span class="ansired">     <span class="ansigreen">from</span> server <span class="ansigreen">import</span> app<span class="ansiblue"></span>
<span class="ansigreen">    274</span>     connect_to_db<span class="ansiblue">(</span>app<span class="ansiblue">)</span><span class="ansiblue"></span>
<span class="ansigreen">    275</span>     <span class="ansigreen">print</span> <span class="ansiblue">"Connected to DB."</span><span class="ansiblue"></span>

<span class="ansired">ImportError</span>: No module named server

</span></span></span></pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell code_cell unrendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[&nbsp;]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 3px; margin-bottom: 0px; border-right-width: 30px; min-height: 28px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 28px;"></div><div class="CodeMirror-gutters" style="display: none; height: 58px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to expand output; double click to hide output" style="display: none;"></div><div class="output" style="display: none;"></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div></div><div class="end_space"></div></div>
        <div id="tooltip" class="ipython_tooltip" style="display:none"><div class="tooltipbuttons"><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#" role="button" class="ui-button"><span class="ui-icon ui-icon-close">Close</span></a><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#" class="ui-corner-all" role="button" id="expanbutton" title="Grow the tooltip vertically (press shift-tab twice)"><span class="ui-icon ui-icon-plus">Expand</span></a><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#" role="button" class="ui-button" title="show the current docstring in pager (press shift-tab 4 times)"><span class="ui-icon ui-icon-arrowstop-l-n">Open in Pager</span></a><a href="http://localhost:8889/notebooks/Untitled.ipynb?kernel_name=python2#" role="button" class="ui-button" title="Tooltip will linger for 10 seconds while you type" style="display: none;"><span class="ui-icon ui-icon-clock">Close</span></a></div><div class="pretooltiparrow"></div><div class="tooltiptext smalltooltip"></div></div>
    </div>
</div>



</div>



<div id="pager" class="ui-resizable">
    <div id="pager-contents">
        <div id="pager-container" class="container"></div>
    </div>
    <div id="pager-button-area"><a role="button" title="Open the pager in an external window" class="ui-button"><span class="ui-icon ui-icon-extlink"></span></a><a role="button" title="Close the pager" class="ui-button"><span class="ui-icon ui-icon-close"></span></a></div>
<div class="ui-resizable-handle ui-resizable-n" style="z-index: 90;"></div></div>






<script type="text/javascript">
    sys_info = {"os_name": "posix", "platform": "Darwin-16.0.0-x86_64-i386-64bit", "default_encoding": "UTF-8", "notebook_path": "/Users/zoesh/anaconda/lib/python2.7/site-packages/notebook", "sys_platform": "darwin", "sys_version": "2.7.11 |Anaconda 2.4.0 (x86_64)| (default, Dec  6 2015, 18:57:58) \n[GCC 4.2.1 (Apple Inc. build 5577)]", "notebook_version": "4.0.6", "commit_source": "", "commit_hash": "", "sys_executable": "/Users/zoesh/anaconda/bin/python"};
</script>

<script src="./restaurant_files/encoding.js" charset="utf-8"></script>

<script src="./restaurant_files/main.min.js" charset="utf-8"></script>





<div style="position: absolute; width: 0px; height: 0px; overflow: hidden; padding: 0px; border: 0px; margin: 0px;"><div id="MathJax_Font_Test" style="position: absolute; visibility: hidden; top: 0px; left: 0px; width: auto; padding: 0px; border: 0px; margin: 0px; white-space: nowrap; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; font-size: 40px; font-weight: normal; font-style: normal;"></div></div></body></html>